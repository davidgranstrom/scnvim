*SCNvim.txt*    For nvim version 0.7.0 or later.

        Neovim frontend for SuperCollider

SCNvim                                      *scnvim*

1. Description..............................|scnvim-description|
   1.1 Acknowledgments
2. Setup....................................|scnvim-setup|
3. Mappings.................................|scnvim-mappings|
4. Commands.................................|scnvim-commands|
5. Help system..............................|scnvim-help-system|
6. Configuration............................|scnvim-configuration|
7. License..................................|scnvim-license|

==============================================================================
DESCRIPTION                                                 *scnvim-description*

SCNvim is a SuperCollider editor frontend for Neovim. It provides ways to
evaluate code and inspect output from the post window among other features
such as automatic function signature hints and more. The goal of this plugin
is to create an integrated development environment for SuperCollider in
Neovim.

Acknowledgments~

This plugin borrows some code and ideas from the original scvim
implementation, for example the code for indent and syntax highlighting.

==============================================================================
SETUP                                                             *scnvim-setup*

Enable the plugin by calling the setup function in your *init.lua*
>
  local scnvim = require('scnvim')
  scnvim.setup()
<
This plugin uses lua for configuration, so you may need to surround the above
statement using a |lua-heredoc| if you are using vim script (i.e. *init.vim* )

Run `:checkhealth scnvim` to check that the installation was succesful.

==============================================================================
MAPPINGS                                                       *scnvim-mappings*

No mappings are defined by default. Use the `scnvim.setup` function to set
your key mappings. The *keywordprg* option is set by scnvim, use `K` to open
documentation for the word under the cursor.
>
  scnvim.setup {
    mapping = {
      ['<M-e>'] = scnvim.map.send_line({'i', 'n'}),
      ['<C-e>'] = {
        scnvim.map.send_block({'i', 'n'}),
        scnvim.map.send_selection('x'),
      },
      ['<CR>'] = scnvim.map.postwin_toggle('n'),
      ['<M-CR>'] = scnvim.map.postwin_toggle('i'),
      ['<M-L>'] = scnvim.map.postwin_clear({'n', 'i'}),
      ['<C-k>'] = scnvim.map.show_signature({'n', 'i'}),
      ['<F12>'] = scnvim.map.hard_stop({'n', 'x', 'i'}),
      ['<leader>st'] = scnvim.map(scnvim.start),
      ['<leader>sk'] = scnvim.map(scnvim.recompile),
    },
  }
<
The following functions are accessible from the `scnvim.map` helper object:

Function               Description
--------               -----------
`send_line`              Get the current line and send it to sclang.
`send_block`             Get the current block of code and send it to sclang.
`send_selection`         Send a visual selection.
`hard_stop`              Send a "hard stop" to the interpreter.
`postwin_toggle`         Toggle the post window.
`postwin_clear`          Clear the post window.
`postwin_focus`          Focus the post window.
`show_signature`         Show the function signature under the cursor.

Note that it is possible to map arbitrary functions using the `scnvim.map`
helper:
>
  scnvim.map(function()
    vim.cmd('SCNvimGenerateAssets')
  end)
<
Note the example above uses the `scnvim.map` helper object as a convenience.
But it is also possible to use the scnvim API directly with |vim.keymap.set|.

==============================================================================
COMMANDS                                                       *scnvim-commands*

Command                   Description
-------                   -----------
`SCNvimStart`               Start SuperCollider
`SCNvimStop`                Stop SuperCollider
`SCNvimRecompile`           Recompile SCClassLibrary
`SCNvimGenerateAssets`      Generate syntax highlightning and snippets
`SCNvimHelp` <subject>      Open HelpBrowser or window split for <subject>
`SCNvimStatusLine`          Display server status in 'statusline' if configured.

==============================================================================
HELP SYSTEM                                                 *scnvim-help-system*

Press `K` to view documentation for the word under the cursor. By default help
files will be opened in the `HelpBrowser`. Read the sections below if you want
to display documentation in nvim.

View documentation in nvim~

SCNvim can be configured to render SCDoc help files (.schelp) to plain text
and display the result inside nvim. In order to do so, the scnvim help system
needs a program to convert HTML help files into plain text e.g. `pandoc[1]`

Set the path to your converter program in the config passed to `scnvim.setup`
>
  scnvim.setup{
    documentation = {
      cmd = '/opt/homebrew/bin/pandoc',
    },
  }
<

Customization~

The help system is configured to use `pandoc` by default. To use another
program you will also need to supply the command line arguments needed to
perform the HTML to plain text conversion. The example below is for the
`html2text` program. `$1` is a placeholder for the *input file* and `$2` is a
placeholder for the *output file*, these are replaced automatically.
>
  scnvim.setup{
    documentation = {
      cmd = '/usr/local/bin/html2text',
      args = {'$1', '-o', '$2'}
    },
  }
<
Useful hints ~

Use the `K` command to open a split window with the documentation of the word
under the cursor. The 'quickfix' window is used to display methods, press enter
on a match to jump to the corresponding help file. Read `:h quickfix` to learn
more about how the 'quickfix' window works.

To see an overview (outline) of the content of the help file press `gO`. This
will open a window local quickfix window (a 'location-list'), use this list to
jump to different sections of the document.

[1]: https://pandoc.org/

==============================================================================
CONFIGURATION                                             *scnvim-configuration*

All user configuration is handled by the `scnvim.setup` function.

The default values are defined and documented in `lua/scnvim/config.lua`in the
root directory of this plugin.

You can also view an up-to-date HTML version of the documentation by visiting
this link: https://davidgranstrom.github.io/scnvim/modules/scnvim.config.html

Example configuration~
>
  scnvim.setup {
    mapping = {
      ['<M-e>'] = scnvim.map.send_line({'i', 'n'}),
      ['<C-e>'] = {
        scnvim.map.send_block({'i', 'n'}),
        scnvim.map.send_selection('x'),
      },
      ['<CR>'] = scnvim.map.postwin_toggle('n'),
      ['<M-CR>'] = scnvim.map.postwin_toggle('i'),
      ['<M-L>'] = scnvim.map.postwin_clear({'n', 'i'}),
      ['<C-k>'] = scnvim.map.show_signature({'n', 'i'}),
      ['<F12>'] = scnvim.map.hard_stop({'n', 'x', 'i'}),
      ['<leader>st'] = scnvim.map(scnvim.start),
      ['<leader>sk'] = scnvim.map(scnvim.recompile),
    },
    editor = {
      highlight = {
        color = 'IncSearch',
        type = 'fade',
      },
    },
    documentation = {
      cmd = '/opt/homebrew/bin/pandoc',
    },
    postwin = {
      float = {
        enabled = true,
      },
    },
  }
<
==============================================================================
LICENSE                                                         *scnvim-license*

scnvim - SuperCollider integration for Neovim
Copyright © 2018 David Granström

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

 vim:tw=78:et:ft=help:norl:
